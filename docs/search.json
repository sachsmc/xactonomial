[{"path":"https://sachsmc.github.io/xactonomial/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Michael C Sachs Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sachsmc.github.io/xactonomial/articles/example.html","id":"maximum-of-parameters","dir":"Articles","previous_headings":"","what":"Maximum of parameters","title":"Basic Examples","text":"example, τ(θ)=max(θ)\\tau(\\theta) = \\max(\\theta). two parameters equal, function nondifferentiable, bootstrap asymptotic methods fail method still works.","code":"psi_causal <- function(pp) {     max(pp)    }  true_psi_causal <- psi_causal(c(.4, .4, .2))  sample_data2 <- function(n) {      list(rmultinom(1, n, prob = c(.4, .4, .2))[, 1])    }   data <- sample_data2(n = c(60)) data #> [[1]] #> [1] 17 28 15 results <- xactonomial(data, psi_causal, psi_limits = c(1/3,1), psi0 = .55,                           maxit = 100, chunksize = 1000, itp_eps = .01)  results #>  #>  Monte-Carlo multinomial test #>  #> data:  data #> p-value = 0.2431 #> alternative hypothesis: true psi0 is not equal to 0.55 #> 95 percent confidence interval: #>  0.3362949 0.5983333 #> sample estimates: #> [1] 0.4666667"},{"path":[]},{"path":"https://sachsmc.github.io/xactonomial/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael C Sachs. Author, maintainer. Michael P Fay. Author. Erin E Gabriel. Author.","code":""},{"path":"https://sachsmc.github.io/xactonomial/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sachs M, Fay M, Gabriel E (2025). xactonomial: Improved Small-Sample Inference Real-Valued Functions Multinomial Parameters k-Samples. R package version 1.0.0, https://github.com/sachsmc/xactonomial.","code":"@Manual{,   title = {xactonomial: Improved Small-Sample Inference for Real-Valued Functions of Multinomial Parameters from k-Samples},   author = {Michael C Sachs and Michael P Fay and Erin E Gabriel},   year = {2025},   note = {R package version 1.0.0},   url = {https://github.com/sachsmc/xactonomial}, }"},{"path":"https://sachsmc.github.io/xactonomial/index.html","id":"xactonomial","dir":"","previous_headings":"","what":"Improved Small-Sample Inference for Real-Valued Functions of Multinomial Parameters from k-Samples","title":"Improved Small-Sample Inference for Real-Valued Functions of Multinomial Parameters from k-Samples","text":"goal xactonomial use exact (computational stochastic) method compute confidence interval function calculation p values k sample multinomial setting interest real-valued functional multinomial probabilities.","code":""},{"path":"https://sachsmc.github.io/xactonomial/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Improved Small-Sample Inference for Real-Valued Functions of Multinomial Parameters from k-Samples","text":"can install development version xactonomial like : building package source requires local rust environment. Instead, pre-built binaries can found https://sachsmc.r-universe.dev/xactonomial used directly R ","code":"remotes::install_github(\"sachsmc/xactonomial\") install.packages(\"xactonomial\", repos = c('https://sachsmc.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://sachsmc.github.io/xactonomial/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Improved Small-Sample Inference for Real-Valued Functions of Multinomial Parameters from k-Samples","text":"basic example shows use main function:","code":"library(xactonomial)  psi_ba <- function(theta) {    theta1 <- theta[1:4]    theta2 <- theta[5:8]    sum(sqrt(theta1 * theta2))    }  data <- list(T1 = c(2,1,2,1), T2 = c(0,1,3,3)) xactonomial(data, psi_ba, psi_limits = c(0, 1), maxit = 5, chunksize = 20)"},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_multinom_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate multinomial probabilities — calc_multinom_probs","title":"Calculate multinomial probabilities — calc_multinom_probs","text":"Calculate multinomial probabilities","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_multinom_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate multinomial probabilities — calc_multinom_probs","text":"","code":"calc_multinom_probs(sar, logt, logc, d, n, nt)"},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_multinom_probs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate multinomial probabilities — calc_multinom_probs","text":"sar unrolled matrix containing portion sample space sum logt vector candidate theta values, sampled null space logc vector log multinomial coefficients see log_multinom_coef d total dimension, sum(d_j) n sample size nt number candidate theta values","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_multinom_probs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate multinomial probabilities — calc_multinom_probs","text":"vector probabilities","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_multinom_probs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate multinomial probabilities — calc_multinom_probs","text":"","code":"sspace_3_5 <- sspace_multinom(3, 5) calc_multinom_probs(sspace_3_5, sample_unit_simplexn(3, 10),   apply(matrix(sspace_3_5, ncol = 3, byrow = TRUE), 1, log_multinom_coef, sumx = 5), 3, 5, 10) #>  [1] 296.84007 142.02929 106.60159 108.70758 295.14131 304.71594  69.98053 #>  [8]  84.68910  86.55943 357.01053"},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate probability for given parameters — calc_prob_null","title":"Calculate probability for given parameters — calc_prob_null","text":"Given set candidate parameter vectors, enumerated sample space, logical vector number elements sample space, compute probability element sample space take sum.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate probability for given parameters — calc_prob_null","text":"","code":"calc_prob_null(theta_cands, SSpacearr, logC, II)"},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate probability for given parameters — calc_prob_null","text":"theta_cands matrix samples rows parameters columns SSpacearr matrix sample space given size problem logC log multinomial coefficient element sample space II logical vector sample space psi extreme observed psi","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate probability for given parameters — calc_prob_null","text":"numeric vector probabilities","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate probability for given parameters — calc_prob_null","text":"","code":"sspace_3_5 <- matrix(sspace_multinom(3, 5), ncol = 3, byrow = TRUE) theta_cands <- matrix(sample_unit_simplexn(3, 10), ncol = 3,byrow = TRUE) calc_prob_null_fast(theta_cands, sspace_3_5, apply(sspace_3_5, 1, log_multinom_coef, sumx = 5), II = 1:21 > 12) #>  [1] 0.490560705 0.392859326 0.002097703 0.772156191 0.178314471 0.989209809 #>  [7] 0.561304457 0.618540630 0.014504900 0.954887016 # same as below but faster calc_prob_null(theta_cands, sspace_3_5, apply(sspace_3_5, 1, log_multinom_coef, sumx = 5), II = 1:21 > 12) #> Error in calc_prob_null(theta_cands, sspace_3_5, apply(sspace_3_5, 1,     log_multinom_coef, sumx = 5), II = 1:21 > 12): could not find function \"calc_prob_null\""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate probability for given parameters — calc_prob_null2","title":"Calculate probability for given parameters — calc_prob_null2","text":"Given set candidate parameter vectors, check null \\(\\psi \\leq \\psi_0\\) satisfied, , compute probability element sample space","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate probability for given parameters — calc_prob_null2","text":"","code":"calc_prob_null2(   theta_cands,   psi,   psi0,   minus1,   SSpacearr,   logC,   II,   psi_v = FALSE )"},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate probability for given parameters — calc_prob_null2","text":"theta_cands matrix samples rows parameters columns psi function interest mapping parameters real line psi0 null boundary testing psi <= psi0 minus1 Either plus minus 1 SSpacearr matrix sample space given size problem logC log multinomial coefficient element sample space II logical vector sample space psi extreme observed psi psi_v psi vectorized row?","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate probability for given parameters — calc_prob_null2","text":"numeric vector probabilities","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate probability for given parameters — calc_prob_null_fast","title":"Calculate probability for given parameters — calc_prob_null_fast","text":"Given set candidate parameter vectors, enumerated sample space, logical vector number elements sample space, compute probability element sample space take sum.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate probability for given parameters — calc_prob_null_fast","text":"","code":"calc_prob_null_fast(theta_cands, SSpacearr, logC, II)"},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate probability for given parameters — calc_prob_null_fast","text":"theta_cands matrix samples rows parameters columns SSpacearr matrix sample space given size problem logC log multinomial coefficient element sample space II logical vector sample space psi extreme observed psi","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate probability for given parameters — calc_prob_null_fast","text":"numeric vector probabilities","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate probability for given parameters — calc_prob_null_fast","text":"","code":"sspace_3_5 <- matrix(sspace_multinom(3, 5), ncol = 3, byrow = TRUE) theta_cands <- matrix(sample_unit_simplexn(3, 10), ncol = 3,byrow = TRUE) calc_prob_null_fast(theta_cands, sspace_3_5, apply(sspace_3_5, 1, log_multinom_coef, sumx = 5), II = 1:21 > 12) #>  [1] 0.3851906695 0.2467206393 0.3338235041 0.0004533876 0.0076767952 #>  [6] 0.7663105384 0.7588514445 0.2469748988 0.4370544499 0.9424411110 # same as below but faster calc_prob_null(theta_cands, sspace_3_5, apply(sspace_3_5, 1, log_multinom_coef, sumx = 5), II = 1:21 > 12) #> Error in calc_prob_null(theta_cands, sspace_3_5, apply(sspace_3_5, 1,     log_multinom_coef, sumx = 5), II = 1:21 > 12): could not find function \"calc_prob_null\""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient of the multinomial likelihood sum — calc_prob_null_gradient","title":"Gradient of the multinomial likelihood sum — calc_prob_null_gradient","text":"Gradient multinomial likelihood sum","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient of the multinomial likelihood sum — calc_prob_null_gradient","text":"","code":"calc_prob_null_gradient(theta_cands, SSpacearr, II)"},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient of the multinomial likelihood sum — calc_prob_null_gradient","text":"theta_cands matrix samples rows parameters columns SSpacearr matrix sample space given size problem II logical vector sample space psi extreme observed psi","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_gradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gradient of the multinomial likelihood sum — calc_prob_null_gradient","text":"matrix dimension theta_cands","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_prob_null_gradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gradient of the multinomial likelihood sum — calc_prob_null_gradient","text":"","code":"calc_prob_null_gradient(t(c(.28, .32, .4)), matrix(c(2, 2, 1, 1, 2, 2, 0, 3, 2), ncol = 3), rep(TRUE, 3)) #>          [,1]      [,2]       [,3] #> [1,] 0.199254 0.1102833 0.02679112  # numerically testenv <- new.env() testenv$SSpacearr <- matrix(c(2, 2, 1, 1, 2, 2, 0, 3, 2), ncol = 3) testenv$thistheta <- c(.28, .32, .4) numericDeriv(quote(sum(exp((.colSums(t(SSpacearr) * log(thistheta), m = 3, n = 3))))),     theta = \"thistheta\", rho = testenv, central = TRUE) #> [1] 0.03018932 #> attr(,\"gradient\") #>          [,1]      [,2]       [,3] #> [1,] 0.199254 0.1102833 0.02679112"},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_probs_rust.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate multinomial probabilities — calc_probs_rust","title":"calculate multinomial probabilities — calc_probs_rust","text":"calculate multinomial probabilities","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/calc_probs_rust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate multinomial probabilities — calc_probs_rust","text":"","code":"calc_probs_rust(sar, logt, logc, d, n, nt)"},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate combinations of multinomial vectors — combinate","title":"Calculate combinations of multinomial vectors — combinate","text":"Given X Y, matrices rows counts multinomial trials, produce combinations rowwise, calculate log multinomial coefficients combination.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate combinations of multinomial vectors — combinate","text":"","code":"combinate(X, Y)"},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate combinations of multinomial vectors — combinate","text":"X Matrix 1 Y Matrix 2","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate combinations of multinomial vectors — combinate","text":"list containing Sspace, sample space (vectors counts),  logC, vector log multinomial coefficients.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate combinations of multinomial vectors — combinate","text":"","code":"slist_2_3 <- combinate(matrix(sspace_multinom(2, 5), ncol = 2, byrow = TRUE),    matrix(sspace_multinom(3, 6), ncol = 3, byrow = TRUE))"},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate2.html","id":null,"dir":"Reference","previous_headings":"","what":"Like combinate but adds on to previous call — combinate2","title":"Like combinate but adds on to previous call — combinate2","text":"Like combinate adds previous call","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Like combinate but adds on to previous call — combinate2","text":"","code":"combinate2(X, Y)"},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Like combinate but adds on to previous call — combinate2","text":"X list containing elements Sspace (matrix), logC (vector) Y Matrix 2","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Like combinate but adds on to previous call — combinate2","text":"list containing Sspace, sample space (vectors counts),  logC, vector log multinomial coefficients.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/combinate2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Like combinate but adds on to previous call — combinate2","text":"","code":"slist_2_3 <- combinate(matrix(sspace_multinom(2, 5), ncol = 2, byrow = TRUE),    matrix(sspace_multinom(3, 6), ncol = 3, byrow = TRUE))  sl_2_3_4 <- combinate2(slist_2_3, matrix(sspace_multinom(4, 3), ncol = 4, byrow = TRUE))"},{"path":"https://sachsmc.github.io/xactonomial/reference/expand_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a matrix of indices for all possible combinations of vectors of lengths — expand_index","title":"Get a matrix of indices for all possible combinations of vectors of lengths — expand_index","text":"basically expand.grid, faster integers","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/expand_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a matrix of indices for all possible combinations of vectors of lengths — expand_index","text":"","code":"expand_index(lengths)"},{"path":"https://sachsmc.github.io/xactonomial/reference/expand_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a matrix of indices for all possible combinations of vectors of lengths — expand_index","text":"lengths vector lengths index expand","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/expand_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a matrix of indices for all possible combinations of vectors of lengths — expand_index","text":"matrix length(lengths) columns prod(lengths) rows","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/expand_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a matrix of indices for all possible combinations of vectors of lengths — expand_index","text":"","code":"expand_index(c(2, 3, 4)) #>       Var1 Var2 Var3 #>  [1,]    1    1    1 #>  [2,]    2    1    1 #>  [3,]    1    2    1 #>  [4,]    2    2    1 #>  [5,]    1    3    1 #>  [6,]    2    3    1 #>  [7,]    1    1    2 #>  [8,]    2    1    2 #>  [9,]    1    2    2 #> [10,]    2    2    2 #> [11,]    1    3    2 #> [12,]    2    3    2 #> [13,]    1    1    3 #> [14,]    2    1    3 #> [15,]    1    2    3 #> [16,]    2    2    3 #> [17,]    1    3    3 #> [18,]    2    3    3 #> [19,]    1    1    4 #> [20,]    2    1    4 #> [21,]    1    2    4 #> [22,]    2    2    4 #> [23,]    1    3    4 #> [24,]    2    3    4 ## the same as expand.grid(1:2, 1:3, 1:4) #>    Var1 Var2 Var3 #> 1     1    1    1 #> 2     2    1    1 #> 3     1    2    1 #> 4     2    2    1 #> 5     1    3    1 #> 6     2    3    1 #> 7     1    1    2 #> 8     2    1    2 #> 9     1    2    2 #> 10    2    2    2 #> 11    1    3    2 #> 12    2    3    2 #> 13    1    1    3 #> 14    2    1    3 #> 15    1    2    3 #> 16    2    2    3 #> 17    1    3    3 #> 18    2    3    3 #> 19    1    1    4 #> 20    2    1    4 #> 21    1    2    4 #> 22    2    2    4 #> 23    1    3    4 #> 24    2    3    4"},{"path":"https://sachsmc.github.io/xactonomial/reference/get_theta_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the unit simplex in d dimensions — get_theta_random","title":"Sample from the unit simplex in d dimensions — get_theta_random","text":"Sample unit simplex d dimensions","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/get_theta_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the unit simplex in d dimensions — get_theta_random","text":"","code":"get_theta_random(d = 4, nsamp = 75)"},{"path":"https://sachsmc.github.io/xactonomial/reference/get_theta_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the unit simplex in d dimensions — get_theta_random","text":"d dimension nsamp number samples take uniformly d space","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/get_theta_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the unit simplex in d dimensions — get_theta_random","text":"grid Theta, parameter space. matrix d columns nsamp rows","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/get_theta_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample from the unit simplex in d dimensions — get_theta_random","text":"","code":"get_theta_random(3, 10) #>              [,1]       [,2]       [,3] #>  [1,] 0.080750138 0.75358290 0.16566696 #>  [2,] 0.157208442 0.44355244 0.39923911 #>  [3,] 0.007399441 0.45899406 0.53360650 #>  [4,] 0.289767245 0.20801014 0.50222261 #>  [5,] 0.732881987 0.03963952 0.22747849 #>  [6,] 0.174940627 0.69966003 0.12539934 #>  [7,] 0.034241333 0.28614440 0.67961427 #>  [8,] 0.195669835 0.20665840 0.59767176 #>  [9,] 0.063661457 0.33987666 0.59646188 #> [10,] 0.388701313 0.58684652 0.02445216"},{"path":"https://sachsmc.github.io/xactonomial/reference/itp_root.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the root of the function f — itp_root","title":"Find the root of the function f — itp_root","text":"finds value \\(x \\[, b]\\) \\(f(x) = 0\\) using one-dimensional root finding ITP method (Interpolate Truncate Project). Also see itp.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/itp_root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the root of the function f — itp_root","text":"","code":"itp_root(   f,   a,   b,   k1 = 0.1,   k2 = 2,   n0 = 1,   eps = 0.005,   maxiter = 100,   fa = NULL,   fb = NULL,   verbose = FALSE,   ... )"},{"path":"https://sachsmc.github.io/xactonomial/reference/itp_root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the root of the function f — itp_root","text":"f function find root terms first (one-dimensional) argument lower limit b upper limit k1 tuning parameter k2 Another tuning parameter n0 Another tuning parameter eps Convergence tolerance maxiter Maximum number iterations fa value f(), NULL calculated fb value f(b), NULL calculated verbose Prints information iteration ... arguments passed f","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/itp_root.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the root of the function f — itp_root","text":"numeric vector length 1, root last iteration","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/itp_root.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the root of the function f — itp_root","text":". F. D. Oliveira R. H. C. Takahashi. 2020. Enhancement Bisection Method Average Performance Preserving Minmax Optimality. ACM Trans. Math. Softw. 47, 1, Article 5 (March 2021), 24 pages. https://doi.org/10.1145/3423597","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/itp_root.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the root of the function f — itp_root","text":"","code":"fpoly <- function(x) x^3 - x - 2 ## example from the ITP_method wikipedia entry itp_root(fpoly, 1, 2, eps = .0001, verbose = TRUE) #> iteration:  0 candidate:  1.433333 , closest value:  -0.4886296  #> iteration:  1 candidate:  1.527131 , closest value:  0.03433833  #> iteration:  2 candidate:  1.520093 , closest value:  -0.007641477  #> iteration:  3 candidate:  1.521379 , closest value:  -4.253635e-06  #> iteration:  4 candidate:  1.521383 , closest value:  1.964979e-05  #> [1] 1.521381 #> attr(,\"iter\") #> [1] 4"},{"path":"https://sachsmc.github.io/xactonomial/reference/log_multinom_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate log of multinomial coefficient — log_multinom_coef","title":"Calculate log of multinomial coefficient — log_multinom_coef","text":"Calculate log multinomial coefficient","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/log_multinom_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate log of multinomial coefficient — log_multinom_coef","text":"","code":"log_multinom_coef(x, sumx)"},{"path":"https://sachsmc.github.io/xactonomial/reference/log_multinom_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate log of multinomial coefficient — log_multinom_coef","text":"x Vector observed counts cell size Total count","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/log_multinom_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate log of multinomial coefficient — log_multinom_coef","text":"log multinomial coefficient","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/log_multinom_coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate log of multinomial coefficient — log_multinom_coef","text":"","code":"#' @examples S0 <- sspace_multinom(4, 6) S1 <- sspace_multinom(4, 7) logC0<- apply(S0,1,log_multinom_coef,sumx=6) #> Error in apply(S0, 1, log_multinom_coef, sumx = 6): dim(X) must have a positive length logC1<- apply(S1,1,log_multinom_coef,sumx=7) #> Error in apply(S1, 1, log_multinom_coef, sumx = 7): dim(X) must have a positive length logC<- outer(logC0,logC1,'+') #> Error: object 'logC0' not found"},{"path":"https://sachsmc.github.io/xactonomial/reference/pvalue_psi0.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a p value for the test of psi <= psi0 (lower = TRUE) or psi >= psi0 (lower = FALSE) — pvalue_psi0","title":"Compute a p value for the test of psi <= psi0 (lower = TRUE) or psi >= psi0 (lower = FALSE) — pvalue_psi0","text":"Compute p value test psi <= psi0 (lower = TRUE) psi >= psi0 (lower = FALSE)","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/pvalue_psi0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a p value for the test of psi <= psi0 (lower = TRUE) or psi >= psi0 (lower = FALSE) — pvalue_psi0","text":"","code":"pvalue_psi0(   psi0,   psi,   psi_hat,   psi_obs,   alternative = \"two.sided\",   maxit,   chunksize,   p_target,   SSpacearr,   logC,   d_k,   psi_is_vectorized = FALSE,   theta_sampler = runif_dk_vects,   ga = FALSE,   ga_gfactor = 1,   ga_lrate = 0.01,   ga_restart_every = 10,   warn = TRUE )"},{"path":"https://sachsmc.github.io/xactonomial/reference/pvalue_psi0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a p value for the test of psi <= psi0 (lower = TRUE) or psi >= psi0 (lower = FALSE) — pvalue_psi0","text":"psi0 null hypothesis value parameter tested. psi Function takes parameters outputs real valued number parameter. Can vectorized rowwise matrix . psi_hat vector psi values element sample space psi_obs observed estimate given data alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\" maxit Maximum number iterations Monte Carlo procedure chunksize number samples take parameter space iteration p_target p-value found greater p_target, terminate algorithm early. SSpacearr sample space matrix logC log multinomial coefficients row sample space d_k vector dimensions psi_is_vectorized psi vectorized row? theta_sampler Function take samples \\(Theta\\) parameter space. Default runif_dk_vects. ga Logical, TRUE, uses gradient ascent. ga_gfactor Concentration parameter scale gradient ascent algorithm. number \"adapt\" ga_lrate gradient ascent learning rate ga_restart_every Restart gradient ascent number iterations sample warn TRUE, give warning samples null space found","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/pvalue_psi0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a p value for the test of psi <= psi0 (lower = TRUE) or psi >= psi0 (lower = FALSE) — pvalue_psi0","text":"vector two p-values, one lower, one greater","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/pvalue_psi0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a p value for the test of psi <= psi0 (lower = TRUE) or psi >= psi0 (lower = FALSE) — pvalue_psi0","text":"","code":"sspace_3_5 <- matrix(sspace_multinom(3, 5), ncol = 3, byrow = TRUE) psi <- function(theta) max(theta) logC <- apply(sspace_3_5, 1, log_multinom_coef, sumx = 5) psi_hat <- apply(sspace_3_5, 1, \\(x) psi(x / sum(x))) pvalue_psi0(.3, psi, psi_hat, .4, maxit = 10, chunksize = 100,  p_target = 1, SSpacearr = sspace_3_5, logC = logC, d_k = 3, warn = FALSE) #>      null       alt  #> 0.0010000 0.3702166  #> attr(,\"p.sequence\") #> attr(,\"p.sequence\")$p.null #>  [1] 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 #>  #> attr(,\"p.sequence\")$p.alt #>  [1] 0.3650079 0.3681825 0.3681825 0.3681825 0.3681825 0.3702166 0.3702166 #>  [8] 0.3702166 0.3702166 0.3702166 #>"},{"path":"https://sachsmc.github.io/xactonomial/reference/rdirich_dk_vects.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample independently from Dirichlet distributions for each of d_k vectors — rdirich_dk_vects","title":"Sample independently from Dirichlet distributions for each of d_k vectors — rdirich_dk_vects","text":"Sample independently Dirichlet distributions d_k vectors","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/rdirich_dk_vects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample independently from Dirichlet distributions for each of d_k vectors — rdirich_dk_vects","text":"","code":"rdirich_dk_vects(nsamp, alpha)"},{"path":"https://sachsmc.github.io/xactonomial/reference/rdirich_dk_vects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample independently from Dirichlet distributions for each of d_k vectors — rdirich_dk_vects","text":"nsamp number samples take alpha List vectors concentration parameters","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/rdirich_dk_vects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample independently from Dirichlet distributions for each of d_k vectors — rdirich_dk_vects","text":"matrix sum(d_k) columns nsamp rows","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/rdirich_dk_vects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample independently from Dirichlet distributions for each of d_k vectors — rdirich_dk_vects","text":"","code":"rdirich_dk_vects(10, list(rep(1, 3), rep(1, 4), rep(1, 2))) #>             [,1]         [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] 0.85903485 0.0007241002 0.14024105 0.16823141 0.10620669 0.67793494 #>  [2,] 0.22777686 0.6923114886 0.07991166 0.22027651 0.74135691 0.03662153 #>  [3,] 0.07009180 0.3913460849 0.53856211 0.30608084 0.04593406 0.54182220 #>  [4,] 0.48592237 0.0816637545 0.43241387 0.01335932 0.32618671 0.35719211 #>  [5,] 0.69731665 0.2395410288 0.06314232 0.16397026 0.04171786 0.11139550 #>  [6,] 0.48061144 0.4502247744 0.06916378 0.29731372 0.08575988 0.48205532 #>  [7,] 0.57273106 0.0511962072 0.37607273 0.22071161 0.05517765 0.35114516 #>  [8,] 0.33541448 0.5772448662 0.08734065 0.46484630 0.11404137 0.39469704 #>  [9,] 0.01942224 0.1338623232 0.84671544 0.21686072 0.24933215 0.08726356 #> [10,] 0.21751343 0.6355332425 0.14695333 0.29840601 0.25367080 0.01826036 #>              [,7]       [,8]       [,9] #>  [1,] 0.047626966 0.08215247 0.91784753 #>  [2,] 0.001745048 0.87158677 0.12841323 #>  [3,] 0.106162903 0.17893724 0.82106276 #>  [4,] 0.303261861 0.72743711 0.27256289 #>  [5,] 0.682916376 0.51465445 0.48534555 #>  [6,] 0.134871077 0.89833051 0.10166949 #>  [7,] 0.372965583 0.86751847 0.13248153 #>  [8,] 0.026415288 0.79224348 0.20775652 #>  [9,] 0.446543580 0.24827596 0.75172404 #> [10,] 0.429662832 0.95696933 0.04303067"},{"path":"https://sachsmc.github.io/xactonomial/reference/runif_dk_vects.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample uniformly and independently from d_k simplices — runif_dk_vects","title":"Sample uniformly and independently from d_k simplices — runif_dk_vects","text":"Sample uniformly independently d_k simplices","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/runif_dk_vects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample uniformly and independently from d_k simplices — runif_dk_vects","text":"","code":"runif_dk_vects(d_k, nsamp, ...)"},{"path":"https://sachsmc.github.io/xactonomial/reference/runif_dk_vects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample uniformly and independently from d_k simplices — runif_dk_vects","text":"d_k vector vector lengths nsamp number samples take","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/runif_dk_vects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample uniformly and independently from d_k simplices — runif_dk_vects","text":"matrix sum(d_k) columns nsamp rows","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/runif_dk_vects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample uniformly and independently from d_k simplices — runif_dk_vects","text":"","code":"runif_dk_vects(c(3, 4, 2), 10) #>             [,1]      [,2]       [,3]         [,4]      [,5]       [,6] #>  [1,] 0.69765543 0.2280013 0.07434323 0.1487827229 0.4553912 0.38233473 #>  [2,] 0.45901772 0.1369365 0.40404580 0.1257892270 0.4129709 0.42442158 #>  [3,] 0.16501099 0.4018988 0.43309022 0.0469350144 0.1144742 0.77507824 #>  [4,] 0.59447228 0.3036051 0.10192263 0.7102740526 0.1748169 0.08559043 #>  [5,] 0.59340837 0.2382816 0.16831008 0.0348996436 0.4038576 0.53811805 #>  [6,] 0.39777165 0.3811990 0.22102937 0.3146626207 0.3298071 0.35036264 #>  [7,] 0.74184558 0.1080372 0.15011723 0.5403376815 0.3155443 0.01753539 #>  [8,] 0.11168022 0.2061100 0.68220978 0.5155856195 0.3409370 0.01293670 #>  [9,] 0.10109537 0.6990024 0.19990225 0.0001036914 0.2050761 0.14050344 #> [10,] 0.05270097 0.3272458 0.62005326 0.2813335131 0.5996007 0.06428627 #>              [,7]        [,8]       [,9] #>  [1,] 0.013491302 0.961116277 0.03888372 #>  [2,] 0.036818246 0.004018454 0.99598155 #>  [3,] 0.063512574 0.552900206 0.44709979 #>  [4,] 0.029318638 0.219235973 0.78076403 #>  [5,] 0.023124683 0.646727143 0.35327286 #>  [6,] 0.005167595 0.727702047 0.27229795 #>  [7,] 0.126582648 0.872587442 0.12741256 #>  [8,] 0.130540702 0.381981546 0.61801845 #>  [9,] 0.654316816 0.892745704 0.10725430 #> [10,] 0.054779509 0.843870286 0.15612971"},{"path":"https://sachsmc.github.io/xactonomial/reference/rust_sspace.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate sample space of a multinomial with dimension d and sample size n — rust_sspace","title":"calculate sample space of a multinomial with dimension d and sample size n — rust_sspace","text":"calculate sample space multinomial dimension d sample size n","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/rust_sspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate sample space of a multinomial with dimension d and sample size n — rust_sspace","text":"","code":"rust_sspace(d, n)"},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplex.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a random sample from the d unit simplex — sample_unit_simplex","title":"Return a random sample from the d unit simplex — sample_unit_simplex","text":"Return random sample d unit simplex","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a random sample from the d unit simplex — sample_unit_simplex","text":"","code":"sample_unit_simplex(d)"},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplex2.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a random sample from the d unit simplex — sample_unit_simplex2","title":"Return a random sample from the d unit simplex — sample_unit_simplex2","text":"Return random sample d unit simplex","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplex2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a random sample from the d unit simplex — sample_unit_simplex2","text":"","code":"sample_unit_simplex2(d)"},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplexn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample n times from the unit simplex in d dimensions — sample_unit_simplexn","title":"Sample n times from the unit simplex in d dimensions — sample_unit_simplexn","text":"Sample n times unit simplex d dimensions","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplexn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample n times from the unit simplex in d dimensions — sample_unit_simplexn","text":"","code":"sample_unit_simplexn(d, n)"},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplexn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample n times from the unit simplex in d dimensions — sample_unit_simplexn","text":"d dimension n number samples take uniformly d space","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplexn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample n times from the unit simplex in d dimensions — sample_unit_simplexn","text":"grid Theta, parameter space. converted matrix d columns nsamp rows","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sample_unit_simplexn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample n times from the unit simplex in d dimensions — sample_unit_simplexn","text":"","code":"matrix(sample_unit_simplexn(3, 10), ncol = d, byrow = TRUE) #> Error: object 'd' not found"},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Enumerate the multinomial sample space — sspace_multinom","title":"Enumerate the multinomial sample space — sspace_multinom","text":"Enumerate multinomial sample space","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enumerate the multinomial sample space — sspace_multinom","text":"","code":"sspace_multinom(d, n)"},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enumerate the multinomial sample space — sspace_multinom","text":"d dimension n sample size","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enumerate the multinomial sample space — sspace_multinom","text":"vector enumerating sample space, converted matrix d columns choose(n + d - 1, d - 1) rows","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enumerate the multinomial sample space — sspace_multinom","text":"","code":"matrix(sspace_multinom(3, 5), ncol = 3, byrow = TRUE) #>       [,1] [,2] [,3] #>  [1,]    5    0    0 #>  [2,]    4    1    0 #>  [3,]    3    2    0 #>  [4,]    2    3    0 #>  [5,]    1    4    0 #>  [6,]    0    5    0 #>  [7,]    4    0    1 #>  [8,]    3    1    1 #>  [9,]    2    2    1 #> [10,]    1    3    1 #> [11,]    0    4    1 #> [12,]    3    0    2 #> [13,]    2    1    2 #> [14,]    1    2    2 #> [15,]    0    3    2 #> [16,]    2    0    3 #> [17,]    1    1    3 #> [18,]    0    2    3 #> [19,]    1    0    4 #> [20,]    0    1    4 #> [21,]    0    0    5"},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom_slow.html","id":null,"dir":"Reference","previous_headings":"","what":"Enumerate the sample space of a multinomial — sspace_multinom_slow","title":"Enumerate the sample space of a multinomial — sspace_multinom_slow","text":"\\(d\\) mutually exclusive outcomes \\(n\\) independent trials. function enumerates possible vectors length \\(d\\) counts outcome \\(n\\) trials, .e., sample space. result output matrix \\(d\\) columns row represents possible observation. See sspace_multinom faster implementation using Rust.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom_slow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enumerate the sample space of a multinomial — sspace_multinom_slow","text":"","code":"sspace_multinom_slow(d, n)"},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom_slow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enumerate the sample space of a multinomial — sspace_multinom_slow","text":"d Dimension n Size","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom_slow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enumerate the sample space of a multinomial — sspace_multinom_slow","text":"matrix d columns","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/sspace_multinom_slow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enumerate the sample space of a multinomial — sspace_multinom_slow","text":"","code":"d4s <- sspace_multinom_slow(4, 8) stopifnot(abs(sum(apply(d4s, 1, dmultinom, prob = rep(.25, 4))) - 1) < 1e-12)"},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial-package.html","id":null,"dir":"Reference","previous_headings":"","what":"xactonomial: Exact Inference for Real-Valued Functionals of k-Sample Multinomial Parameters — xactonomial-package","title":"xactonomial: Exact Inference for Real-Valued Functionals of k-Sample Multinomial Parameters — xactonomial-package","text":"consider k sample multinomial problem observe k vectors (possibly different lengths), representing independent multinomial random vector. given function psi takes concatenated vector multinomial probabilities outputs real number, Monte Carlo estimation procedure exact p-value confidence interval. resulting inference valid even small samples, parameter boundary, function nondifferentiable parameter value, situations asymptotic methods bootstrap fail.","code":""},{"path":[]},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xactonomial: Exact Inference for Real-Valued Functionals of k-Sample Multinomial Parameters — xactonomial-package","text":"Maintainer: Michael C Sachs sachsmc@gmail.com Authors: Michael P Fay","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Improved inference for a real-valued function of multinomial parameters — xactonomial","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"consider k sample multinomial problem observe k vectors (possibly different lengths), representing independent sample multinomial. given function psi takes concatenated vector multinomial probabilities outputs real number, interested computing p-value test psi >= psi0, constructing confidence interval psi.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"","code":"xactonomial(   data,   psi,   statistic = NULL,   psi0 = NULL,   alternative = c(\"two.sided\", \"less\", \"greater\"),   psi_limits,   theta_null_points = NULL,   p_target = 1,   conf_int = TRUE,   conf_level = 0.95,   itp_maxit = 10,   itp_eps = 0.005,   maxit = 50,   chunksize = 500,   theta_sampler = runif_dk_vects,   ga = TRUE,   ga_gfactor = \"adapt\",   ga_lrate = 0.01,   ga_restart_every = 10 )"},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"data list k elements representing vectors counts k-sample multinomial psi Function takes parameters outputs real valued number parameter. Can vectorized rowwise matrix . statistic Function takes matrix data vectors rows, outputs vector number rows matrix. NULL, inferred psi plugging empirical proportions. psi0 null hypothesis value parameter tested. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\" psi_limits vector length 2 giving lower upper limits range \\(\\psi(\\theta)\\) theta_null_points optional matrix row theta value gives psi(theta) = psi0. supplied psi0 = one boundary points, truly exact p-value calculated. p_target p-value found greater p_target, terminate algorithm early. conf_int TRUE, calculates confidence interval inverting p-value function itp_maxit Maximum iterations use ITP algorithm. relevant conf_int = TRUE. itp_eps Epsilon value use ITP algorithm. relevant conf_int = TRUE. maxit Maximum number iterations Monte Carlo procedure chunksize number samples take parameter space iteration theta_sampler Function take samples \\(Theta\\) parameter space. Default runif_dk_vects. ga Logical, TRUE, uses gradient ascent. ga_gfactor Concentration parameter scale gradient ascent algorithm. number \"adapt\" ga_lrate gradient ascent learning rate ga_restart_every Restart gradient ascent number iterations sample theta_sampler","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"object class \"htest\", list following elements: estimate value statistic observed data p.value p value conf.int upper lower confidence limits null.value null hypothesis value provided user alternative type test method description method data.name name data object provided user p.sequence list two elements, p.null p.alt containing vector p values iteration less null greater null. Used assessing convergence.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"Let \\(T_j\\) distributed \\(\\mbox{Multinomial}_{d_j}(\\boldsymbol{\\theta}_j, n_j)\\) \\(j = 1, \\ldots, k\\) denote \\(\\boldsymbol{T} = (T_1, \\ldots, T_k)\\) \\(\\boldsymbol{\\theta} = (\\theta_1, \\ldots, \\theta_k)\\). subscript \\(d_j\\) denotes dimension multinomial. Suppose one interested parameter \\(\\psi = \\tau(\\boldsymbol{\\theta}) \\\\Psi \\subseteq \\mathbb{R}\\). Given sample size \\(n\\) \\(\\boldsymbol{T}\\), say \\(\\boldsymbol{X} = (X_1, \\ldots, X_k)\\), vector counts obtained concatenating k independent count vectors, let \\(G(\\boldsymbol{X})\\) denote real-valued statistic defines ordering sample space. Tne default choice statistic estimate \\(\\boldsymbol{\\theta}\\) sample proportions plug \\(\\tau(\\boldsymbol{\\theta})\\). function calculates p value test null hypothesis \\(H_0: \\psi(\\boldsymbol{\\theta}) \\neq \\psi_0\\) two sided case, \\(H_0: \\psi(\\boldsymbol{\\theta}) \\leq \\psi_0\\) case alternative = \"greater\", \\(H_0: \\psi(\\boldsymbol{\\theta}) \\geq \\psi_0\\) case alternative = \"less\". make assumptions rely large sample approximations. also optionally constructs \\(1 - \\alpha\\) percent confidence interval \\(\\psi\\). computation somewhat involved best small sample sizes. calculation done sampling large number points null parameter space \\(\\Theta_0\\), computing multinomial probabilities values range sample space statistic extreme observed statistic given data. basically definition p-value implemented Monte Carlo methods. options speeding calculation available.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"specifying-the-function-psi","dir":"Reference","previous_headings":"","what":"Specifying the function psi","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"psi parameter function either: 1) takes vector length sum(d_j) (total number bins) outputs single number, 2) takes matrix number columns equal sum(d_j), arbitrary number rows outputs vector length equal number rows. words, psi can vectorized can vectorized row. Writing vectorized can speed calculation. See examples.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"boundary-issues","dir":"Reference","previous_headings":"","what":"Boundary issues","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"required provide psi_limits, vector length 2 giving smallest largest possible values function psi can take, e.g., c(0, 1). null hypothesis value psi0 one limits, often case sampling null parameter space impossible set measure 0. may measure 0, empty, contain finite set points. Thus provide argument theta_null_points matrix rows contain finite set (sometimes 1) points \\(\\theta\\) \\(\\tau(\\theta) = \\psi_0\\). See examples.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"optimization-options","dir":"Reference","previous_headings":"","what":"Optimization options","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"p-value calculation, can provide parameter p_target, sampling algorithm terminates p-value found exceeds p_target. algorithm begins sampling uniformly unit simplices defining parameter space, alternatives can specified theta_sampler. default gradient ascent (ga = TRUE) performed p-value maximization procedure, ga_gfactor ga_lrate control options gradient ascent. iteration, gradient multinomial probability current maximum theta computed, step taken theta + lrate * gradient. next iteration, set chunksize samples drawn Dirichlet distribution parameter ga_gfactor * (theta + ga_lrate * gradient). ga_gfactor = \"adapt\" set 1 / max(theta) iteration. ITP algorithm itp used find roots p-value function function psi0 value get confidence intervals. maximum number iterations epsilon can controlled via itp_maxit, itp_eps.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"Sachs, M.C., Gabriel, E.E. Fay, M.P., 2024. Exact confidence intervals functions parameters k-sample multinomial problem. arXiv preprint arXiv:2406.19141.","code":""},{"path":"https://sachsmc.github.io/xactonomial/reference/xactonomial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Improved inference for a real-valued function of multinomial parameters — xactonomial","text":"","code":"psi_ba <- function(theta) {   theta1 <- theta[1:4]   theta2 <- theta[5:8]   sum(sqrt(theta1 * theta2))   } data <- list(T1 = c(2,1,2,1), T2 = c(0,1,3,3)) xactonomial(data, psi_ba, psi_limits = c(0, 1), psi0 = .5,   conf_int = FALSE, maxit = 15, chunksize = 200) #>  #> \tMonte-Carlo multinomial test #>  #> data:  data #> p-value = 0.02521 #> alternative hypothesis: true psi0 is not equal to 0.5 #> 95 percent confidence interval: #>  NA NA #> sample estimates: #> [1] 0.7995291 #>   # vectorized by row psi_ba_v <- function(theta) { theta1 <- theta[,1:4, drop = FALSE] theta2 <- theta[,5:8, drop = FALSE] rowSums(sqrt(theta1 * theta2)) } data <- list(T1 = c(2,1,2,1), T2 = c(0,1,3,3)) xactonomial(data, psi_ba_v, psi_limits = c(0, 1), psi0 = .5,  conf_int = FALSE, maxit = 10, chunksize = 200) #>  #> \tMonte-Carlo multinomial test #>  #> data:  data #> p-value = 0.03567 #> alternative hypothesis: true psi0 is not equal to 0.5 #> 95 percent confidence interval: #>  NA NA #> sample estimates: #> [1] 0.7995291 #>    # example of using theta_null_points  # psi = 1/3 occurs when all probs = 1/3  psi_max <- function(pp) {    max(pp)  }  data <- list(c(13, 24, 13))  xactonomial(data, psi_max, psi_limits = c(1 / 3, 1), psi0 = 1/ 3,   conf_int = FALSE, theta_null_points = t(c(1/3, 1/3, 1/3))) #>  #> \tExact multinomial test given a point null #>  #> data:  data #> p-value = 0.1331 #> alternative hypothesis: true psi0 is not equal to 0.3333333 #> 95 percent confidence interval: #>  NA NA #> sample estimates: #> [1] 0.48 #>"},{"path":"https://sachsmc.github.io/xactonomial/news/index.html","id":"xactonomial-100","dir":"Changelog","previous_headings":"","what":"xactonomial 1.0.0","title":"xactonomial 1.0.0","text":"First major release. Speedups Rust implementation sample space enumeration, gradient ascent, stability root finding algorithm.","code":""},{"path":"https://sachsmc.github.io/xactonomial/news/index.html","id":"xactonomial-041","dir":"Changelog","previous_headings":"","what":"xactonomial 0.4.1","title":"xactonomial 0.4.1","text":"Speedups Seeding seed works reproducibility","code":""},{"path":"https://sachsmc.github.io/xactonomial/news/index.html","id":"xactonomial-030","dir":"Changelog","previous_headings":"","what":"xactonomial 0.3.0","title":"xactonomial 0.3.0","text":"Cleanup bugfixes","code":""},{"path":"https://sachsmc.github.io/xactonomial/news/index.html","id":"xactonomial-020","dir":"Changelog","previous_headings":"","what":"xactonomial 0.2.0","title":"xactonomial 0.2.0","text":"substantial speedups implementing things Rust using rextendr","code":""},{"path":"https://sachsmc.github.io/xactonomial/news/index.html","id":"xactonomial-010","dir":"Changelog","previous_headings":"","what":"xactonomial 0.1.0","title":"xactonomial 0.1.0","text":"Initial release.","code":""}]
